{"version":3,"sources":["components/Dashboard/Dashboard.module.css","components/Dashboard/TransactionHistory/TransactionHistory.module.css","components/Dashboard/Balance/Balance.module.css","components/Dashboard/Controls/Controls.js","components/Dashboard/Balance/Balance.js","components/Dashboard/Balance/calculateTotalAmount.js","components/Dashboard/TransactionHistory/TransactionHistory.js","components/Dashboard/Dashboard.js","components/App/App.js","index.js","components/Dashboard/Controls/Controls.module.css"],"names":["module","exports","Controls","props","handleChange","target","name","value","setState","handleClick","amount","state","balance","handleTransactions","amountToNumber","Number","transaction","id","shortid","generate","type","date","Date","toLocaleString","notifyNotEnough","reset","notifyEmptyInput","toast","error","position","POSITION","TOP_RIGHT","this","className","styles","controls","valueInput","onChange","button","onClick","autoClose","Component","Balance","transactions","description","role","aria-label","imgSpan","length","filter","el","reduce","acc","calculateTotalDeposit","calculateTotalWithdraw","defaultProps","TransactionHistory","history","headlineRow","headlineRowItem","map","row","key","rowItem","Dashboard","prev","dashboard","App","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.05b4fe4d.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"dashboard\":\"Dashboard_dashboard__kN3g5\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"history\":\"TransactionHistory_history__3kCqF\",\"headlineRow\":\"TransactionHistory_headlineRow__1cDOT\",\"headlineRowItem\":\"TransactionHistory_headlineRowItem__3C5yX\",\"row\":\"TransactionHistory_row__2H416\",\"rowItem\":\"TransactionHistory_rowItem__3RGmJ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"balance\":\"Balance_balance__2QSh1\",\"description\":\"Balance_description__2QCax\",\"imgSpan\":\"Balance_imgSpan__T9xmS\"};","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { ToastContainer, toast } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\nimport shortid from 'shortid';\nimport styles from './Controls.module.css';\n\nclass Controls extends Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            amount: '',\n        };\n    }\n\n    handleChange = ({ target }) => {\n        const { name, value } = target;\n\n        this.setState({\n            [name]: value,\n        });\n    };\n\n    handleClick = ({ target }) => {\n        const { amount } = this.state;\n        const { name } = target;\n        const { balance, handleTransactions } = this.props;\n\n        const amountToNumber = Number(amount);\n\n        const transaction = {\n            id: shortid.generate(),\n            type: name,\n            amount: amountToNumber,\n            date: new Date().toLocaleString(),\n        };\n\n        if (amount > balance && name === 'withdraw') {\n            this.notifyNotEnough();\n\n            this.reset();\n\n            return;\n        }\n\n        if (amount <= 0) {\n            this.notifyEmptyInput();\n\n            this.reset();\n\n            return;\n        }\n\n        handleTransactions(transaction);\n\n        this.reset();\n    };\n\n    reset = () => {\n        return this.setState({\n            amount: '',\n        });\n    };\n\n    notifyNotEnough = () => {\n        toast.error('На счету недостаточно средств для проведения операции!', {\n            position: toast.POSITION.TOP_RIGHT,\n        });\n    };\n\n    notifyEmptyInput = () => {\n        toast.error('Введите корректную сумму  для проведения операции!', {\n            position: toast.POSITION.TOP_RIGHT,\n        });\n    };\n\n    render() {\n        const { amount } = this.state;\n\n        return (\n            <div>\n                <section className={styles.controls}>\n                    <input\n                        type=\"number\"\n                        className={styles.valueInput}\n                        name=\"amount\"\n                        value={amount}\n                        onChange={this.handleChange}\n                    />\n                    <button\n                        type=\"button\"\n                        className={styles.button}\n                        name=\"deposit\"\n                        onClick={this.handleClick}\n                    >\n                        Deposit\n                    </button>\n                    <button\n                        type=\"button\"\n                        className={styles.button}\n                        name=\"withdraw\"\n                        onClick={this.handleClick}\n                    >\n                        Withdraw\n                    </button>\n                    <ToastContainer autoClose={1500} />\n                </section>\n            </div>\n        );\n    }\n}\n\nControls.propTypes = {\n    balance: PropTypes.number.isRequired,\n    handleTransactions: PropTypes.func.isRequired,\n};\n\nexport default Controls;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport styles from './Balance.module.css';\nimport {\n    calculateTotalDeposit,\n    calculateTotalWithdraw,\n} from './calculateTotalAmount';\n\nconst Balance = ({ balance, transactions }) => {\n    return (\n        <section className={styles.balance}>\n            <span className={styles.description}>\n                <span role=\"img\" aria-label=\"img\" className={styles.imgSpan}>\n                    ⬆️{calculateTotalDeposit(transactions)}\n                </span>\n                $\n            </span>\n            <span className={styles.description}>\n                <span role=\"img\" aria-label=\"img\" className={styles.imgSpan}>\n                    ⬇️{calculateTotalWithdraw(transactions)}\n                </span>\n                $\n            </span>\n            <span className={styles.description}>Balance: {balance}$</span>\n        </section>\n    );\n};\n\nBalance.defaultProps = {\n    transactions: [],\n};\n\nBalance.propTypes = {\n    balance: PropTypes.number.isRequired,\n    transactions: PropTypes.arrayOf(PropTypes.object),\n};\n\nexport default Balance;\n","const calculateTotalDeposit = transactions =>\n    transactions.length\n        ? transactions\n              .filter(el => el.type === 'deposit')\n              .reduce((acc, el) => acc + el.amount, 0)\n        : 0;\n\nconst calculateTotalWithdraw = transactions =>\n    transactions.length\n        ? transactions\n              .filter(el => el.type === 'withdraw')\n              .reduce((acc, el) => acc + el.amount, 0)\n        : 0;\n\nexport { calculateTotalDeposit, calculateTotalWithdraw };\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport styles from './TransactionHistory.module.css';\n\nconst TransactionHistory = ({ transactions }) => {\n    return (\n        <table className={styles.history}>\n            <thead>\n                <tr className={styles.headlineRow}>\n                    <th className={styles.headlineRowItem}>Transaction</th>\n                    <th className={styles.headlineRowItem}>Amount</th>\n                    <th className={styles.headlineRowItem}>Date</th>\n                </tr>\n            </thead>\n            <tbody>\n                {transactions.map(el => {\n                    const { id, type, amount, date } = el;\n\n                    return (\n                        <tr className={styles.row} key={id}>\n                            <td className={styles.rowItem}>{type}</td>\n                            <td className={styles.rowItem}>{amount}$</td>\n                            <td className={styles.rowItem}>{date}</td>\n                        </tr>\n                    );\n                })}\n            </tbody>\n        </table>\n    );\n};\n\nTransactionHistory.defaultProps = {\n    transactions: [],\n};\n\nTransactionHistory.propTypes = {\n    transactions: PropTypes.arrayOf(PropTypes.object),\n};\n\nexport default TransactionHistory;\n","import React, { Component } from 'react';\nimport styles from './Dashboard.module.css';\nimport Controls from './Controls/Controls';\nimport Balance from './Balance/Balance';\nimport TransactionHistory from './TransactionHistory/TransactionHistory';\n\nclass Dashboard extends Component {\n    constructor() {\n        super();\n\n        this.state = {\n            transactions: [],\n            balance: 0,\n        };\n    }\n\n    handleTransactions = transaction => {\n        this.setState(prev => ({\n            transactions: [...prev.transactions, transaction],\n            balance:\n                transaction.type === 'deposit'\n                    ? prev.balance + transaction.amount\n                    : prev.balance - transaction.amount,\n        }));\n    };\n\n    render() {\n        const { transactions, balance } = this.state;\n\n        return (\n            <div className={styles.dashboard}>\n                <Controls\n                    balance={balance}\n                    handleTransactions={this.handleTransactions}\n                />\n                <Balance balance={balance} transactions={transactions} />\n                <TransactionHistory transactions={transactions} />\n            </div>\n        );\n    }\n}\n\nexport default Dashboard;\n","import React from 'react';\nimport './App.css';\nimport Dashboard from '../Dashboard/Dashboard';\n\nfunction App() {\n    return (\n        <div>\n            <Dashboard />\n        </div>\n    );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './components/App/App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"controls\":\"Controls_controls__MI2QK\",\"valueInput\":\"Controls_valueInput__2bCSz\",\"button\":\"Controls_button__2rBTd\"};"],"sourceRoot":""}